* [[file:types.org][Types]]

* Default Types

  A few default types are provided. This is by no means complete. A nice goal would be to support all types the sql spec supports.

  Import the abstract type to implement
  #+BEGIN_SRC python :tangle defaults.py
    from .interface import Type
  #+END_SRC

** TODO Integer

   #+BEGIN_SRC python :tangle defaults.py
     class Integer(Type):
         def serialize(value):
             pass

         def deserialize(value):
             pass

         def query_prepare(value):
             # this is where things start to get interesting
             # with the given model setup I want types to be able to enforce fks
             # perhaps a context or something to hide some details should be passed
             # perhaps the data should just be basically raw...
             # It may be best to get to this once I have a more concrete engine plan...
             pass
   #+END_SRC

** TODO String

   #+BEGIN_SRC python :tangle defaults.py
     class String(Type):
         def serialize(value):
             pass

         def deserialize(value):
             pass

         def query_prepare(value, args):
             pass
   #+END_SRC

** TODO Boolean

** TODO OneToOne

** TODO OneToMany
